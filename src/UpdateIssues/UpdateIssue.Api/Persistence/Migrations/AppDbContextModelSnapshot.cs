// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UpdateIssue.Api.Persistence.DataContexts;

#nullable disable

namespace UpdateIssue.Api.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UpdateIssue.Api.Domain.Entities.GuestFeedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("GuestFeedbacks");
                });

            modelBuilder.Entity("UpdateIssue.Api.Domain.Entities.GuestFeedback", b =>
                {
                    b.OwnsOne("UpdateIssue.Api.Domain.Entities.Rating", "Rating", b1 =>
                        {
                            b1.Property<Guid>("GuestFeedbackId")
                                .HasColumnType("uuid");

                            b1.Property<float>("Accuracy")
                                .HasColumnType("real");

                            b1.Property<float>("CheckIn")
                                .HasColumnType("real");

                            b1.Property<float>("Cleanliness")
                                .HasColumnType("real");

                            b1.Property<float>("Communication")
                                .HasColumnType("real");

                            b1.Property<float>("Location")
                                .HasColumnType("real");

                            b1.Property<float>("OverallRating")
                                .HasColumnType("real");

                            b1.Property<float>("Value")
                                .HasColumnType("real");

                            b1.HasKey("GuestFeedbackId");

                            b1.ToTable("GuestFeedbacks");

                            b1.WithOwner()
                                .HasForeignKey("GuestFeedbackId");
                        });

                    b.Navigation("Rating")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
